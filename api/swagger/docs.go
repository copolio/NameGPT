// Code generated by swaggo/swag. DO NOT EDIT.

package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v0/ping": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v0"
                ],
                "summary": "Pong!",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v0/users": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v0"
                ],
                "summary": "Creates a user.",
                "parameters": [
                    {
                        "description": "Create user request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_copolio_namegpt_pkg_dto.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "$ref": "#/definitions/github_com_copolio_namegpt_internal_namegpt_entity.User"
                        }
                    }
                }
            }
        },
        "/api/v0/users/{name}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v0"
                ],
                "summary": "Gets a user info by name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user",
                        "schema": {
                            "$ref": "#/definitions/github_com_copolio_namegpt_internal_namegpt_entity.User"
                        }
                    }
                }
            }
        },
        "/api/v1/domains/recommendations": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Generates domain names in server sent event.",
                "parameters": [
                    {
                        "description": "Generate domain name recommendation",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_copolio_namegpt_pkg_dto.RecommendDomainNames"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "domain",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/domains/similar-names": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Get similar domain names given input",
                "parameters": [
                    {
                        "description": "Generate similar domain name",
                        "name": "q",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_copolio_namegpt_pkg_dto.SimilarDomainNames"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "domain names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_copolio_namegpt_pkg_client_gabia.RegistCheckResult"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_copolio_namegpt_internal_namegpt_entity.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "github_com_copolio_namegpt_pkg_client_gabia.RegistCheckResult": {
            "type": "object",
            "properties": {
                "app_price": {
                    "type": "string"
                },
                "backorder_date": {
                    "type": "string"
                },
                "cart": {
                    "type": "string"
                },
                "category_end": {
                    "type": "string"
                },
                "category_path": {
                    "type": "string"
                },
                "check": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_tooltip": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "domain_tld": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "event_flag": {
                    "type": "string"
                },
                "extra_info": {},
                "flag": {
                    "type": "string"
                },
                "input_source": {
                    "type": "string"
                },
                "is_new": {
                    "type": "string"
                },
                "is_premium": {
                    "type": "string"
                },
                "managed": {
                    "type": "string"
                },
                "new_flag": {
                    "type": "string"
                },
                "parent_index": {
                    "type": "boolean"
                },
                "premium_extend_price": {
                    "type": "array",
                    "items": {}
                },
                "price": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "app_price": {
                                "type": "integer"
                            },
                            "discount_price": {
                                "type": "integer"
                            },
                            "fixed_price": {
                                "type": "integer"
                            },
                            "fixed_price_vat": {
                                "type": "integer"
                            },
                            "offer_year": {
                                "type": "integer"
                            },
                            "save_point": {
                                "type": "integer"
                            },
                            "vat_price": {
                                "type": "integer"
                            },
                            "view_app_price": {
                                "type": "integer"
                            },
                            "view_price_value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "price_detail": {
                    "type": "string"
                },
                "puny_domain": {
                    "type": "string"
                },
                "reserve": {
                    "type": "string"
                },
                "reserve_gubun": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "special_flag": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "stype": {
                    "type": "integer"
                },
                "tab": {
                    "type": "string"
                },
                "whois": {
                    "type": "string"
                },
                "whois_domain": {
                    "type": "string"
                }
            }
        },
        "github_com_copolio_namegpt_pkg_dto.CreateUser": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "github_com_copolio_namegpt_pkg_dto.RecommendDomainNames": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "previousResults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "github_com_copolio_namegpt_pkg_dto.SimilarDomainNames": {
            "type": "object",
            "required": [
                "keyword"
            ],
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
